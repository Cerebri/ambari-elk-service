import json
import requests

def parse_queue(queueList, parent_memory_capacity, parent_vcore_capacity):
    for queue in queueList:
        name = queue['queueName']
        memory = int(parent_memory_capacity*(float(queue['capacity'])/100))
        vcore = int(parent_vcore_capacity*(float(queue['capacity'])/100))
        usedM = queue['resourcesUsed']['memory']
        usedC = queue['resourcesUsed']['vCores']
        print "%s %d %d %d %d" % (name, memory, vcore, usedM, usedC)
        
        if 'queues' in queue and 'queue' in queue['queues']:
            parse_queue(queue['queues']['queue'], memory, vcore)
        
if __name__ == "__main__":
    r = requests.get('http://{{rm_host}}:{{rm_port}}/ws/v1/cluster/metrics')
    output = r.json()
    memoryTotal = output['clusterMetrics']['totalMB']
    memoryUsed = output['clusterMetrics']['allocatedMB']
    vcoreTotal = output['clusterMetrics']['totalVirtualCores']
    vcoreUsed = output['clusterMetrics']['allocatedVirtualCores']
    
    r = requests.get('http://{{rm_host}}:{{rm_port}}/ws/v1/cluster/scheduler')
    output = r.json()
    queueName = output['scheduler']['schedulerInfo']['queueName']
    print "%s %d %d %d %d" % (queueName, memoryTotal, vcoreTotal, memoryUsed, vcoreUsed)
    
    if 'queues' in output['scheduler']['schedulerInfo'] and 'queue' in output['scheduler']['schedulerInfo']['queues']:
        queues = output['scheduler']['schedulerInfo']['queues']['queue']
        parse_queue(queues, memoryTotal, vcoreTotal)
